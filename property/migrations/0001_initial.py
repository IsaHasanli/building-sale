# Generated by Django 4.1.4 on 2022-12-16 19:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('price', models.BigIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1500000), django.core.validators.MinValueValidator(0)])),
                ('view_count', models.IntegerField(default=0)),
                ('description', models.TextField()),
                ('video', models.FileField(upload_to='property/video')),
                ('location', models.TextField()),
                ('category', models.CharField(choices=[('flat', 'Flat'), ('land', 'Land'), ('plot', 'Plot'), ('commercial', 'Commercial')], max_length=20)),
                ('building_type', models.CharField(choices=[('old-building', 'Old Building'), ('new-building', 'New Building')], default='new-building', max_length=20)),
                ('property_type', models.CharField(choices=[('for-sale', 'For Sale'), ('for-rent', 'For Rent'), ('sold-out', 'Sold Out')], default='for-sale', max_length=20)),
                ('area', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(500), django.core.validators.MinValueValidator(0)])),
                ('rooms', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('ground', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('building_ground', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('bedroom_count', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('bath_count', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('have_kitchen', models.BooleanField(default=True)),
                ('have_air_condition', models.BooleanField(default=True)),
                ('have_belcony', models.BooleanField(default=True)),
                ('have_gym', models.BooleanField(default=True)),
                ('have_garden', models.BooleanField(default=True)),
                ('have_cctv', models.BooleanField(default=True)),
                ('have_children_playground', models.BooleanField(default=True)),
                ('have_security', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='property/images/')),
                ('category', models.CharField(choices=[('apartment', 'APARTMENT'), ('livingroom', 'LIVING ROOM'), ('bedroom', 'BEDROOM'), ('kitchen', 'KITCHEN'), ('garage', 'GARAGE')], max_length=100)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_images', to='property.property')),
            ],
        ),
    ]
